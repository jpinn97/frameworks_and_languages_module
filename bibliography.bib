@misc{am_i_helpfulAnswerWhatBacklog2016,
  title = {Answer to "{{What}} Is "Backlog" in {{TCP}} Connections?"},
  shorttitle = {Answer to "{{What}} Is "Backlog" in {{TCP}} Connections?},
  author = {Am\_I\_Helpful},
  year = {2016},
  month = apr,
  journal = {Stack Overflow},
  url = {https://stackoverflow.com/a/36596724},
  urldate = {2023-12-29},
  file = {C:\Users\test\Zotero\storage\GEWAHEF9\what-is-backlog-in-tcp-connections.html}
}

@misc{CustomMiddleware2022,
  title = {Custom {{Middleware}}},
  year = {2022},
  month = apr,
  journal = {Gin Web Framework},
  url = {https://gin-gonic.com/docs/examples/custom-middleware/},
  urldate = {2024-01-03},
  abstract = {func Logger() gin.HandlerFunc \{ return func(c *gin.Context) \{ t := time.Now() // Set example variable 	c.Set("example", "12345") // before request  c.Next() // after request 	latency := time.Since(t) log.Print(latency) // access the status we are sending 	status := c.Writer.Status() log.Println(status) \} \} func main() \{ r := gin.New() r.Use(Logger()) r.GET("/test", func(c *gin.Context) \{ example := c.MustGet("example").(string) // it would print: "12345" 	log.Println(example) \}) // Listen and serve on 0.\vphantom\}},
  langid = {english},
  file = {C:\Users\test\Zotero\storage\6WHVDE8D\custom-middleware.html}
}

@misc{Documentation2022,
  title = {Documentation},
  year = {2022},
  month = apr,
  journal = {Gin Web Framework},
  url = {https://gin-gonic.com/docs/},
  urldate = {2024-01-02},
  abstract = {Gin Web Framework},
  langid = {english},
  file = {C:\Users\test\Zotero\storage\FZ8H5VBW\docs.html}
}

@misc{DocumentationGoProgramming2023,
  title = {Documentation - {{The Go Programming Language}}},
  year = {2023},
  month = dec,
  url = {https://go.dev/doc/},
  urldate = {2024-01-02},
  langid = {english},
  file = {C:\Users\test\Zotero\storage\FYTY37MD\doc.html}
}

@misc{NetIncreaseSOMAXCONN2019,
  title = {Net: Increase {{SOMAXCONN}} to 4096 - Kernel/Git/Torvalds/Linux.Git - {{Linux}} Kernel Source Tree},
  year = {2019},
  month = oct,
  url = {https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=19f92a030ca6d772ab44b22ee6a01378a8cb32d4},
  urldate = {2023-12-30},
  file = {C:\Users\test\Zotero\storage\U98MB4K9\commit.html}
}

@misc{SocketLowlevelNetworking2023,
  title = {Socket {\textemdash} {{Low-level}} Networking Interface},
  year = {2023},
  journal = {Python documentation},
  url = {https://docs.python.org/3/library/socket.html},
  urldate = {2023-12-30},
  abstract = {Source code: Lib/socket.py This module provides access to the BSD socket interface. It is available on all modern Unix systems, Windows, MacOS, and probably additional platforms. Availability: not ...},
  file = {C:\Users\test\Zotero\storage\9LTQRBW8\socket.html}
}

@misc{StateSnapshotReact2024,
  title = {State as a {{Snapshot}} {\textendash} {{React}}},
  year = {2024},
  url = {https://react.dev/learn/state-as-a-snapshot},
  urldate = {2024-01-02},
  abstract = {The library for web and native user interfaces},
  langid = {english},
  file = {C:\Users\test\Zotero\storage\8B4KVDY5\state-as-a-snapshot.html}
}

@misc{UnicodeDecodeErrorPythonWiki2008,
  title = {{{UnicodeDecodeError}} - {{Python Wiki}}},
  year = {2008},
  month = nov,
  url = {https://wiki.python.org/moin/UnicodeDecodeError},
  urldate = {2024-01-01},
  file = {C:\Users\test\Zotero\storage\AAN563EI\UnicodeDecodeError.html}
}

@misc{UsingMiddleware2022,
  title = {Using Middleware},
  year = {2022},
  month = apr,
  journal = {Gin Web Framework},
  url = {https://gin-gonic.com/docs/examples/using-middleware/},
  urldate = {2024-01-03},
  abstract = {func main() \{ // Creates a router without any middleware by default 	r := gin.New() // Global middleware 	// Logger middleware will write the logs to gin.DefaultWriter even if you set with GIN\_MODE=release. 	// By default gin.DefaultWriter = os.Stdout 	r.Use(gin.Logger()) // Recovery middleware recovers from any panics and writes a 500 if there was one. 	r.Use(gin.Recovery()) // Per route middleware, you can add as many as you desire.\vphantom\}},
  langid = {english},
  file = {C:\Users\test\Zotero\storage\GK6BBUA6\using-middleware.html}
}

@article{UTF82023,
  title = {{{UTF-8}}},
  year = {2023},
  month = dec,
  journal = {Wikipedia},
  url = {https://en.wikipedia.org/w/index.php?title=UTF-8\&oldid=1191368954},
  urldate = {2024-01-01},
  abstract = {UTF-8 is a variable-length character encoding standard used for electronic communication. Defined by the Unicode Standard, the name is derived from Unicode Transformation Format {\textendash}  8-bit.UTF-8 is capable of encoding all 1,112,064 valid Unicode code points using one to four one-byte (8-bit) code units. Code points with lower numerical values, which tend to occur more frequently, are encoded using fewer bytes. It was designed for backward compatibility with ASCII: the first 128 characters of Unicode, which correspond one-to-one with ASCII, are encoded using a single byte with the same binary value as ASCII, so that valid ASCII text is valid UTF-8-encoded Unicode as well. UTF-8 was designed as a superior alternative to UTF-1, a proposed variable-length encoding with partial ASCII compatibility which lacked some features including self-synchronization and fully ASCII-compatible handling of characters such as slashes. Ken Thompson and Rob Pike produced the first implementation for the Plan 9 operating system in September 1992. This led to its adoption by X/Open as its specification for FSS-UTF, which would first be officially presented at USENIX in January 1993 and subsequently adopted by the Internet Engineering Task Force (IETF) in RFC 2277 (BCP 18) for future internet standards work, replacing Single Byte Character Sets such as Latin-1 in older RFCs. UTF-8 results in fewer internationalization issues than any alternative text encoding, and it has been implemented in all modern operating systems, including Microsoft Windows, and standards such as JSON, where, as is increasingly the case, it is the only allowed form of Unicode. UTF-8 is the dominant encoding for the World Wide Web (and internet technologies), accounting for 98.1\% of all web pages, 99.1\% of the top 10,000 pages, and up to 100\%  for many languages, as of 2023. Virtually all countries and languages have 95\% or more use of UTF-8 encodings on the web.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1191368954},
  file = {C:\Users\test\Zotero\storage\4FAIQV85\UTF-8.html}
}
